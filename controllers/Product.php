<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Product extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Product_model');
    } 

    /*
     * Listing of product
     */
    function index()
    {
        $data['product'] = $this->Product_model->get_all_product();
        
        $data['_view'] = 'product/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new product
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('product_code','Product Code','required');
		$this->form_validation->set_rules('product_name','Product Name','required');
		$this->form_validation->set_rules('quantity','Quantity','numeric');
		$this->form_validation->set_rules('price','Price','numeric');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'product_cat' => $this->input->post('product_cat'),
				'product_code' => $this->input->post('product_code'),
				'product_name' => $this->input->post('product_name'),
				'product_description' => $this->input->post('product_description'),
				'quantity' => $this->input->post('quantity'),
				'price' => $this->input->post('price'),
            );
            
            $product_id = $this->Product_model->add_product($params);
            redirect('product/index');
        }
        else
        {            
            $data['_view'] = 'product/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a product
     */
    function edit($product_id)
    {   
        // check if the product exists before trying to edit it
        $data['product'] = $this->Product_model->get_product($product_id);
        
        if(isset($data['product']['product_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('product_code','Product Code','required');
			$this->form_validation->set_rules('product_name','Product Name','required');
			
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'product_cat' => $this->input->post('product_cat'),
					'product_code' => $this->input->post('product_code'),
					'product_name' => $this->input->post('product_name'),
					'product_description' => $this->input->post('product_description'),
					
                );

                $this->Product_model->update_product($product_id,$params);            
                redirect('product/index');
            }
            else
            {
                $data['_view'] = 'product/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The product you are trying to edit does not exist.');
    } 

    /*
     * Deleting product
     */
    function remove($product_id)
    {
        $product = $this->Product_model->get_product($product_id);

        // check if the product exists before trying to delete it
        if(isset($product['product_id']))
        {
            $this->Product_model->delete_product($product_id);
            redirect('product/index');
        }
        else
            show_error('The product you are trying to delete does not exist.');
    }
    
}
